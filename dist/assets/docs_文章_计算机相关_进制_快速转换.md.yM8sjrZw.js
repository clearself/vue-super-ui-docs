import{aF as t,e as d,f as e,V as l}from"./chunks/framework.54wzUQT-.js";const u=JSON.parse('{"title":"二进制、八进制、十六进制快速转换","description":"","frontmatter":{},"headers":[],"relativePath":"docs/文章/计算机相关/进制/快速转换.md","filePath":"docs/文章/计算机相关/进制/快速转换.md","lastUpdated":1716277301000}'),r={name:"docs/文章/计算机相关/进制/快速转换.md"},o=l('<h1 id="二进制、八进制、十六进制快速转换" tabindex="-1">二进制、八进制、十六进制快速转换 <a class="header-anchor" href="#二进制、八进制、十六进制快速转换" aria-label="Permalink to &quot;二进制、八进制、十六进制快速转换&quot;">​</a></h1><h2 id="表格" tabindex="-1">表格 <a class="header-anchor" href="#表格" aria-label="Permalink to &quot;表格&quot;">​</a></h2><p>先看表格</p><table><thead><tr><th>十进制</th><th>二进制</th><th>八进制</th><th>十六进制</th></tr></thead><tbody><tr><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>1</td><td>1</td><td>1</td><td>1</td></tr><tr><td>2</td><td>10</td><td>2</td><td>2</td></tr><tr><td>3</td><td>11</td><td>3</td><td>3</td></tr><tr><td>4</td><td>100</td><td>4</td><td>4</td></tr><tr><td>5</td><td>101</td><td>5</td><td>5</td></tr><tr><td>6</td><td>110</td><td>6</td><td>6</td></tr><tr><td>7</td><td>111</td><td>7</td><td>7</td></tr><tr><td>8</td><td>1000</td><td>10</td><td>8</td></tr><tr><td>9</td><td>1001</td><td>11</td><td>9</td></tr><tr><td>10</td><td>1010</td><td>12</td><td>A</td></tr><tr><td>11</td><td>1011</td><td>13</td><td>B</td></tr><tr><td>12</td><td>1100</td><td>14</td><td>C</td></tr><tr><td>13</td><td>1101</td><td>15</td><td>D</td></tr><tr><td>14</td><td>1110</td><td>16</td><td>E</td></tr><tr><td>15</td><td>1111</td><td>17</td><td>F</td></tr><tr><td>16</td><td>10000</td><td>20</td><td>10</td></tr></tbody></table><h2 id="十进制快速转二进制" tabindex="-1">十进制快速转二进制 <a class="header-anchor" href="#十进制快速转二进制" aria-label="Permalink to &quot;十进制快速转二进制&quot;">​</a></h2><ul><li>规律 1：可以发现二进制与十进制的规律 1 2 4 8 为 1 10 100 1000 10000，对应的权值法计算也是 2 的次方数累加，以此类推 2 后面一个 0，4 后面 2 个 0，8 后面 3 个 0...32 后面 5 个 0...</li></ul><table><thead><tr><th>十进制</th><th>二进制</th><th>权值法</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>1 * 2^0</td></tr><tr><td>2</td><td>10</td><td>1 * 2^1</td></tr><tr><td>4</td><td>100</td><td>1 * 2^2</td></tr><tr><td>8</td><td>1000</td><td>1 * 2^3</td></tr><tr><td>16</td><td>10000</td><td>1 * 2^4</td></tr></tbody></table><ul><li>规律 2：1-7 直接随便取一个十进制数，比如 7，可以有规律 1 中的十进制数（1，2，4，8）来组合： <code>7 = 1 + 2 + 4</code>，将<code>1 + 2 + 4</code>替换为对于的二进制数：<code>1 + 10 + 100</code>得出<code>111</code>，111 就是 7 的二进制数</li></ul><table><thead><tr><th>十进制</th><th>二进制</th></tr></thead><tbody><tr><td>0</td><td>0</td></tr><tr><td>1</td><td>1</td></tr><tr><td>2</td><td>10</td></tr><tr><td>3</td><td>11</td></tr><tr><td>4</td><td>100</td></tr><tr><td>5</td><td>101</td></tr><tr><td>6</td><td>110</td></tr><tr><td>7</td><td>111</td></tr></tbody></table><ul><li>由上得出，任意十进制数字可以由 1，2，4，8 相加得到，在将相加的数字替换为二进制数相加即可。</li></ul><p>利用 1 2 4 8 法则可以快速转换</p><p>例 1：</p><ol><li>十进制数 13</li><li>13 = 1 + 4 + 8;</li><li>替换为二进制数为 1 + 100 + 1000 = 1011; 1011 为 13 的二进制数</li></ol><p>例 2：</p><ol><li>十进制数 48</li><li>48 = 32 + 16;</li><li>替换二进制：100000 + 10000 = 110000; 110000 为 48 的二进制。</li></ol><p>例 3：</p><ol><li>十进制数 123</li><li>123 = 64 + 32 + 16 + 8 + 2 + 1;</li><li>1000000 + 100000 + 10000 + 1000 + 10 + 1 = 1111011;</li></ol><h2 id="二进制转十进制" tabindex="-1">二进制转十进制 <a class="header-anchor" href="#二进制转十进制" aria-label="Permalink to &quot;二进制转十进制&quot;">​</a></h2><p>二进制也是利用倒数的 1248 法则来快速转换为十进制</p><p>例 1：</p><ol><li>二进制数 10110101</li><li>从右往左对应的是 1 2 4 8 16 32 64...，如果是 0 就直接为 0</li><li>10110101 从右往左 1 2 4 8 累计对应 ↓</li><li>128+0+32+16+0+4+0+1</li><li>相加得到十进制数 181</li></ol><h2 id="二进制转八进制" tabindex="-1">二进制转八进制 <a class="header-anchor" href="#二进制转八进制" aria-label="Permalink to &quot;二进制转八进制&quot;">​</a></h2><table><thead><tr><th>二进制</th><th>八进制</th></tr></thead><tbody><tr><td>001</td><td>1</td></tr><tr><td>010</td><td>2</td></tr><tr><td>100</td><td>4</td></tr><tr><td>1000</td><td>10</td></tr></tbody></table><p>可以找到规律：每 3 位二进制对应以为 8 进制，二进制 1000，可以看作 <code>001 000</code>，对应八进制的<code>1 0</code></p><p>例 1：</p><ol><li>二进制数<code>0010101011000110</code></li><li>利用 1 2 4 8 法则，并按 3 位数拆开<code>0 010 101 011 000 110</code></li><li>按 3 位数对应的值为<code>0 2 5 3 0 6</code>得到的八进制数就是<code>25306</code></li></ol><h2 id="八进制转二进制" tabindex="-1">八进制转二进制 <a class="header-anchor" href="#八进制转二进制" aria-label="Permalink to &quot;八进制转二进制&quot;">​</a></h2><p>八进制转二进制与二进制转八进制相反，一位八进制数对应三位二进制数</p><p>例：</p><ol><li>八进制数<code>1263716451</code></li><li>按每位数拆开<code>1 2 6 3 7 1 6 4 5 1</code></li><li>对应的二进制数为<code>001 010 110 011 111 001 110 100 101 001</code></li><li>得到的二进制数为<code>001010110011111001110100101001</code></li></ol><h2 id="十六进制转二进制" tabindex="-1">十六进制转二进制 <a class="header-anchor" href="#十六进制转二进制" aria-label="Permalink to &quot;十六进制转二进制&quot;">​</a></h2><p>与八进制转二进制相同，不过是一位十六进制数对应四位二进制数</p><p>例：</p><ol><li>十六进制<code>168adf</code></li><li>拆为单个十六进制<code>1 6 8 a d f</code></li><li>对应的二进制数<code>0001 0110 1000 1010 1101 1111</code></li><li>得到对应的二进制<code>000101101000101011011111</code></li></ol><h2 id="二进制转十六进制" tabindex="-1">二进制转十六进制 <a class="header-anchor" href="#二进制转十六进制" aria-label="Permalink to &quot;二进制转十六进制&quot;">​</a></h2><p>同上，每四位二进制数对应一位十六进制</p><p>例：</p><ol><li>二进制数<code>01010101011101010001010101</code></li><li>拆为4位<code>01 0101 0101 1101 0100 0101 0101</code></li><li>对应的十六进制<code>1 5 5 d 4 5 5</code></li><li>得到对应的十六进制<code>155d455</code></li></ol><h2 id="十六进制转二进制-1" tabindex="-1">十六进制转二进制 <a class="header-anchor" href="#十六进制转二进制-1" aria-label="Permalink to &quot;十六进制转二进制&quot;">​</a></h2><p>同理，一位十六进制数对应4位二进制</p><p>例：</p><ol><li>十六进制数<code>FD3981</code></li><li>拆分单个<code>F D 3 9 8 1</code></li><li>对应的二进制<code>1111 1101 0011 1001 1000 0001</code></li></ol>',42),a=[o];function i(c,h,p,n,s,b){return d(),e("div",null,a)}const f=t(r,[["render",i]]);export{u as __pageData,f as default};
