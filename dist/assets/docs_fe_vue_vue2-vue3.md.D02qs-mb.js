import{aF as e,e as a,f as t,V as u}from"./chunks/framework.54wzUQT-.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/fe/vue/vue2-vue3.md","filePath":"docs/fe/vue/vue2-vue3.md","lastUpdated":1716277301000}'),i={name:"docs/fe/vue/vue2-vue3.md"},o=u('<h2 id="vue2-和vue-3的区别" tabindex="-1">Vue2 和Vue 3的区别 <a class="header-anchor" href="#vue2-和vue-3的区别" aria-label="Permalink to &quot;Vue2 和Vue 3的区别&quot;">​</a></h2><h2 id="_1-双向数据绑定原理不同" tabindex="-1">1.双向数据绑定原理不同 <a class="header-anchor" href="#_1-双向数据绑定原理不同" aria-label="Permalink to &quot;1.双向数据绑定原理不同&quot;">​</a></h2><ul><li><p>Vue2 的双向数据绑定是利用ES5的一个APIObject.definePropert() 对数据进行劫持，结合发布订阅模式的方式来实现的。</p></li><li><p>Vue3 中使用ES6的Proxy API对数据代理。</p></li></ul><h2 id="_2-是否支持碎片" tabindex="-1">2.是否支持碎片 <a class="header-anchor" href="#_2-是否支持碎片" aria-label="Permalink to &quot;2.是否支持碎片&quot;">​</a></h2><ul><li>Vue2 不支持碎片。Vue3 支持碎片，就是说可以拥有多个根节点</li></ul><h2 id="_3-api-类型不同" tabindex="-1">3.API 类型不同 <a class="header-anchor" href="#_3-api-类型不同" aria-label="Permalink to &quot;3.API 类型不同&quot;">​</a></h2><ul><li><p>Vue2 使用选项类型api,选项型api 在代码里分割了不同的属性：data,computed,method等。</p></li><li><p>Vue3 使用合成型api,新的合成型api 能让我们使用方法来分割，相比于旧的api 使用属性来分组，这样代码会更加简便和整洁。</p></li></ul><h2 id="_4-定义数据变量和方法不同" tabindex="-1">4.定义数据变量和方法不同 <a class="header-anchor" href="#_4-定义数据变量和方法不同" aria-label="Permalink to &quot;4.定义数据变量和方法不同&quot;">​</a></h2><ul><li><p>Vue2是把数据放到了data 中，在 Vue2中 定义数据变量是data(){},创建的方法要在method:{}</p></li><li><p>Vue3 就需要使用一个新的setup()方法，此方法在组件初始化构造的时候触发。使用以下三个步骤来建立反应性数据：</p></li></ul><p>1）从vue 引入 reactive；</p><p>2）使用 reactive ()方法来声明数据为响应性数据；</p><p>3） 使用setup()方法来返回我们的响应性数据，从而template 可以获取这些响应性数据。</p><h2 id="_5-生命周期钩子函数不同" tabindex="-1">5.生命周期钩子函数不同 <a class="header-anchor" href="#_5-生命周期钩子函数不同" aria-label="Permalink to &quot;5.生命周期钩子函数不同&quot;">​</a></h2><ul><li><p>Vue2 中的生命周期：beforeCreate 组件创建之前；created 组建创建之后；beforeMount 组件挂载到页面之前执行；Mounted 组件挂载到页面之后执行，beforeUpdate 组件更新之前；updated组件更新之后</p></li><li><p>Vue3 中的生命周期：setup 开始创建组件；onBeforeMount 组件挂载到页面之前执行；onMounted 组件挂载到页面之后执行；onBeforeUpdate 组件更新之前；onUpdated 组件更新之后；</p></li><li><p>而且 Vue3 生命周期在调用前需要先进行引入。除了这些钩子函数外，Vue3 还增加了 onRenderTracked 和onRenderTriggered 函数。</p></li></ul>',14),r=[o];function l(d,p,n,s,c,h){return a(),t("div",null,r)}const V=e(i,[["render",l]]);export{f as __pageData,V as default};
