import{aF as s,e as i,f as a,V as t}from"./chunks/framework.54wzUQT-.js";const g=JSON.parse('{"title":"JavaScript 文本选中检测","description":"","frontmatter":{},"headers":[],"relativePath":"docs/JavaScript/表单脚本/文本选中检测.md","filePath":"docs/JavaScript/表单脚本/文本选中检测.md","lastUpdated":1716277301000}'),n={name:"docs/JavaScript/表单脚本/文本选中检测.md"},l=t(`<h1 id="javascript-文本选中检测" tabindex="-1">JavaScript 文本选中检测 <a class="header-anchor" href="#javascript-文本选中检测" aria-label="Permalink to &quot;JavaScript 文本选中检测&quot;">​</a></h1><h2 id="选中文本" tabindex="-1">选中文本 <a class="header-anchor" href="#选中文本" aria-label="Permalink to &quot;选中文本&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">inp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 选中文本框中的所有文字</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getSelectedText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> text.selectionStart </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;number&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">​  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 选择文字的起始，结束下标</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> text.value.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">substring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text.selectionStart,text.selectionEnd);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(document.selecttion){</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// IE 取得 IE 中的选择文本代码 调用 document.selecttion 不需要考虑 text 参数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.selecttion.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createRang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().text;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">​  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="输入检测" tabindex="-1">输入检测 <a class="header-anchor" href="#输入检测" aria-label="Permalink to &quot;输入检测&quot;">​</a></h2><p>检测浏览器是否支持 pattern 属性</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isPatternSupported </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;pattern&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;input&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">input.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stepUp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 加 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">input.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stepUp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 加 5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">input.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stepDown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 减 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">input.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stepDown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 减 5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 检测有效性</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(document.forms[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">checkValidity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()){</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 整个表单有效，返回 true。 也可以单独 input 调用这个方法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>customError：如果设置了 setCustomValidity()，则为 true，否则返回 false</li><li>patternMismatch：如果值与指定的 pattern 属性不匹配，返回 true</li><li>reangeOverflow：如果值比 max 值大，返回 true</li><li>rangeUnderflow：如果值比 min 值小，返回 true</li><li>stepMisMatch：如果 min 和 max 直接的步长值不合理，返回 true</li><li>tooLong：值的长度超过了 maxlenght 属性指定的长度，返回 true。火狐会自动约束字符数量，所以会永远返回 true</li><li>typeMismatch：如果值不是 &#39;mail&#39; 或 &#39;url&#39; 要求的格式，返回 true</li><li>valid：如果这里的属性都是 false，返回 true。checkValidity() 也要求相同的值</li><li>valueMissing：如果标注为 required 的字段中没有值，返回 true</li></ul><h2 id="选择框脚本" tabindex="-1">选择框脚本 <a class="header-anchor" href="#选择框脚本" aria-label="Permalink to &quot;选择框脚本&quot;">​</a></h2><ul><li>add（new option, relOption）：向控件中插入行的 &lt;option&gt;</li><li>multiple：布尔值，是否允许多选</li><li>options：控件中所有 &lt;option&gt; 元素的 HTMLCollection</li><li>remove(index)：移除给定位置的选项</li><li>selectedIndex：选中的索引，从 0 开始，没有则是 -1</li><li>size：选择框可见的行数</li></ul><p>每个 &lt;option&gt; 都有一个 HTMLOptionElement 对象</p><ul><li>index：当前选项在 option 集合中的索引</li><li>label：当前选择的标签；等价于 html 中 label 的特性</li><li>selected：布尔值，表示当前选项是否被选中，设为 true 可以选中当前选项</li><li>text：选项的文本</li><li>value：选项的值</li></ul>`,11),e=[l];function h(p,k,r,E,d,c){return i(),a("div",null,e)}const y=s(n,[["render",h]]);export{g as __pageData,y as default};
