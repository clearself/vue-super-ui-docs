import{aF as t,e as d,f as r,V as e}from"./chunks/framework.54wzUQT-.js";const a="/vue-super-ui/assets/1.a-FHt_6u.png",o="/vue-super-ui/assets/2.FjpVNmaI.png",f=JSON.parse('{"title":"二进制","description":"","frontmatter":{},"headers":[],"relativePath":"docs/文章/计算机相关/进制/二进制.md","filePath":"docs/文章/计算机相关/进制/二进制.md","lastUpdated":1716277301000}'),i={name:"docs/文章/计算机相关/进制/二进制.md"},l=e('<h1 id="二进制" tabindex="-1">二进制 <a class="header-anchor" href="#二进制" aria-label="Permalink to &quot;二进制&quot;">​</a></h1><p>二进制是计算技术中广泛采用的一种数制。二进制数据是用 0 和 1 两个数码来表示的数。 它的基数为 2，进位规则是“逢二进一”，10 进制的 1 二进制表示 1，10 进制 2 在二进制由 10 表示。</p><p>当前的计算机系统使用的基本上是二进制系统，数据在计算机中主要是以补码的形式存储的。</p><table><thead><tr><th>十进制</th><th>二进制</th></tr></thead><tbody><tr><td>0</td><td>0</td></tr><tr><td>1</td><td>1</td></tr><tr><td>2</td><td>10</td></tr><tr><td>3</td><td>11</td></tr><tr><td>4</td><td>100</td></tr><tr><td>5</td><td>101</td></tr><tr><td>6</td><td>110</td></tr><tr><td>7</td><td>111</td></tr><tr><td>8</td><td>1000</td></tr><tr><td>9</td><td>1001</td></tr><tr><td>10</td><td>1010</td></tr><tr><td>11</td><td>1011</td></tr><tr><td>12</td><td>1100</td></tr><tr><td>13</td><td>1101</td></tr><tr><td>14</td><td>1110</td></tr><tr><td>15</td><td>1111</td></tr><tr><td>16</td><td>10000</td></tr></tbody></table><h2 id="内存单位" tabindex="-1">内存单位 <a class="header-anchor" href="#内存单位" aria-label="Permalink to &quot;内存单位&quot;">​</a></h2><table><thead><tr><th>术语</th><th>含义</th></tr></thead><tbody><tr><td>bit(比特)</td><td>一个二进制代表一位，一个位只能表示 0 或 1 两种状态。数据传输是习惯以“位”（bit）为单位。</td></tr><tr><td>Byte(字节)</td><td>一个字节为 8 个二进制，称为 8 位，计算机中存储的最小单位是字节。数据存储是习惯以“字节”（Byte）为单位。</td></tr><tr><td>WORD(双字节)</td><td>2 个字节，16 位</td></tr><tr><td>DWORD</td><td>两个 WORD，4 个字节，32 位</td></tr><tr><td>1b</td><td>1bit，1 位</td></tr><tr><td>1B 1Byte,</td><td>1 字节，8 位</td></tr><tr><td>1k，1K</td><td>1024</td></tr><tr><td>1M(1 兆)</td><td>1024k, 1024 * 1024</td></tr><tr><td>1G</td><td>1024M</td></tr><tr><td>1T</td><td>1024G</td></tr><tr><td>1Kb(千位)</td><td>1024bit,1024 位</td></tr><tr><td>1KB(千字节)</td><td>1024Byte，1024 字节</td></tr><tr><td>1Mb(兆位)</td><td>1024Kb = 1024 * 1024bit</td></tr><tr><td>1MB(兆字节)</td><td>1024KB = 1024 * 1024Byte</td></tr></tbody></table><h2 id="十进制整数转二进制" tabindex="-1">十进制整数转二进制 <a class="header-anchor" href="#十进制整数转二进制" aria-label="Permalink to &quot;十进制整数转二进制&quot;">​</a></h2><p>除二反序取余法，用十进制数除以 2，分别取余数和商数，商数为 0 的时候，将余数倒着数就是转化后的结果。</p><p><img src="'+a+'" alt="十进制转化二进制" loading="lazy"></p><h2 id="十进制的小数转二进制" tabindex="-1">十进制的小数转二进制 <a class="header-anchor" href="#十进制的小数转二进制" aria-label="Permalink to &quot;十进制的小数转二进制&quot;">​</a></h2><p>小数部分和 2 相乘，取整数，不足 1 取 0，<strong>每次相乘都是小数部分</strong>，顺序看取整后的数就是转化后的结果。</p><p><img src="'+o+'" alt="十进制的小数转换成二进制" loading="lazy"></p><h2 id="二进制转十进制" tabindex="-1">二进制转十进制 <a class="header-anchor" href="#二进制转十进制" aria-label="Permalink to &quot;二进制转十进制&quot;">​</a></h2><p>权值法，将一个二进制数从末尾（右边）开始数个数，假设为 n，乘以 2 的 n 次幂，n 从 0 开始。</p><p>如二进制数<code>1111011</code>：</p><p><code>[二进制的数] * 2^[n]</code></p><ul><li><code>1 * 2^0 = 1</code></li><li><code>1 * 2^1 = 2</code></li><li><code>0 * 2^2 = 0</code></li><li><code>1 * 2^3 = 8</code></li><li><code>1 * 2^4 = 16</code></li><li><code>1 * 2^5 = 32</code></li><li><code>1 * 2^6 = 64</code></li></ul><p>最后相加<code>1+2+0+8+16+32+64 = 123</code>，123 就是转换成十进制的结果</p>',18),c=[l];function s(n,h,p,_,b,u){return d(),r("div",null,c)}const y=t(i,[["render",s]]);export{f as __pageData,y as default};
