import{aF as i,e as s,f as a,V as l}from"./chunks/framework.54wzUQT-.js";const E=JSON.parse('{"title":"CSS3 动画、过渡、变换","description":"","frontmatter":{},"headers":[],"relativePath":"docs/CSS/CSS3/动画.md","filePath":"docs/CSS/CSS3/动画.md","lastUpdated":1716277301000}'),e={name:"docs/CSS/CSS3/动画.md"},t=l(`<h1 id="css3-动画、过渡、变换" tabindex="-1">CSS3 动画、过渡、变换 <a class="header-anchor" href="#css3-动画、过渡、变换" aria-label="Permalink to &quot;CSS3 动画、过渡、变换&quot;">​</a></h1><h2 id="过渡" tabindex="-1">过渡 <a class="header-anchor" href="#过渡" aria-label="Permalink to &quot;过渡&quot;">​</a></h2><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transition: property duration  </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">timing-function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  delya;</span></span></code></pre></div><ul><li>property 过渡的属性 多个属性之间用逗号隔开 none没有过渡属性 all所有的</li><li>duration： 过渡时间 s / ms</li><li>timing-function： linear匀速 ease</li><li>delay 延迟时间</li></ul><h2 id="动画" tabindex="-1">动画 <a class="header-anchor" href="#动画" aria-label="Permalink to &quot;动画&quot;">​</a></h2><ol><li><p>创建动画过程 @keyframes</p></li><li><p>调用动画</p></li></ol><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">animation: name duration </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">timing-function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> delay </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">iteration-count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> direction;</span></span></code></pre></div><ul><li>name：动画名称，绑定到 @keyframes</li><li>duration：完成动画的时间</li><li>timing-function：曲线速度 linear</li><li>delay：延迟时间</li><li>iteration-count：动画播放次数 number，infinite 无限</li><li>direction：是否轮流反向，alternate</li></ul><h2 id="变换" tabindex="-1">变换 <a class="header-anchor" href="#变换" aria-label="Permalink to &quot;变换&quot;">​</a></h2><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transform: translate(x,y) rotate(deg) scale(x,y) skew(x,y)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">transform-origin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: length | 关键字 | %</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">transform-style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:flat | </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">preserve-3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">perspective: number;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">backface-visibility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: hidden;</span></span></code></pre></div><ul><li><p>2D</p><ul><li>translate(x,y)：平移</li><li>rotate(deg)：旋转</li><li>scale(x,y)：缩放，1 默认值，比 1 大放大，比 1 小缩小</li><li>skew(x,y)：倾斜，单位是角度 deg</li></ul></li><li><p>3D</p><ul><li>translateZ()：z 轴平移，前后移动</li></ul></li><li><p>translate3d(x,y,z)</p><ul><li>rotateX()：绕 x 轴旋转 前后翻转</li></ul></li><li><p>rotateY()：绕 y 轴旋转 左右翻转</p><ul><li>rotateZ()：绕 z 轴旋转 水平翻转</li></ul></li><li><p>rotate3d(x,y,z,deg)：-1 0 1 0-360deg</p><ul><li>scaleZ()：在 z 轴上缩放</li></ul></li><li><p>scale3d(x,y,z)</p></li><li><p>perspective：视距</p></li><li><p>transform-origin：元素的中心点</p></li><li><p>transform-style：保留子元素的 3d 位置</p></li><li><p>backface-visibility: 翻转之后看不见盒子背面</p></li></ul>`,11),n=[t];function p(r,h,o,d,c,k){return s(),a("div",null,n)}const g=i(e,[["render",p]]);export{E as __pageData,g as default};
